(function() {
  var EpitechNorm;

  module.exports = EpitechNorm = (function() {
    EpitechNorm.prototype.activated = false;

    EpitechNorm.prototype.defaultTabLength = 0;

    function EpitechNorm(editor) {
      var fileName, _ref;
      this.editor = editor;
      this.defaultTabLength = atom.config.get('editor.tabLength');
      if (typeof this.editor.getPath() !== 'undefined') {
        _ref = this.editor.getPath().split("/"), fileName = _ref[_ref.length - 1];
        if (atom.config.get('epitech-norm.autoActivateOnCSource')) {
          if (fileName.match(/^.*\.[ch]$/)) {
            this.enable();
          }
        }
        if (atom.config.get('epitech-norm.autoActivateOnMakefileSource')) {
          if (fileName.match(/^Makefile$/)) {
            this.enable();
          }
        }
        if (atom.config.get('epitech-norm.autoActivateOnCppSource')) {
          if (fileName.match(/^.*\.cpp$/)) {
            this.enable();
          } else if (fileName.match(/^.*\.hpp$/)) {
            this.enable();
          }
        }
      }
    }

    EpitechNorm.prototype.replaceTabsBySpaces = function(str) {
      var ch, i, ret, _i, _len;
      i = 0;
      ret = "";
      for (_i = 0, _len = str.length; _i < _len; _i++) {
        ch = str[_i];
        if (ch === '\t') {
          ret += " ".repeat(8 - i % 8);
          i += 8 - i % 8;
        } else {
          ret += ch;
          i += 1;
        }
      }
      return ret;
    };

    EpitechNorm.prototype.toggle = function() {
      if (this.activated) {
        return this.disable();
      } else {
        return this.enable();
      }
    };

    EpitechNorm.prototype.enable = function() {
      this.activated = true;
      return this.editor.setTabLength(8);
    };

    EpitechNorm.prototype.disable = function() {
      this.activated = false;
      return this.editor.setTabLength(this.defaultTabLength);
    };

    EpitechNorm.prototype.indent = function(e) {
      if (!(this.activated || this.editor.hasMultipleCursors())) {
        if (e) {
          e.abortKeyBinding();
        }
        return;
      }
      return this.editor.transact((function(_this) {
        return function() {
          var col, indentedRow, line, row, saveCol, saveRow, _ref, _ref1;
          _ref = _this.editor.getCursorBufferPosition().toArray(), saveRow = _ref[0], saveCol = _ref[1];
          _this.editor.moveToEndOfLine();
          _ref1 = _this.editor.getCursorBufferPosition().toArray(), row = _ref1[0], col = _ref1[1];
          line = _this.editor.getText().split("\n")[row];
          indentedRow = _this.getIndentedRow(row);
          _this.editor.setTextInBufferRange([[row, 0], [row, col]], indentedRow);
          return _this.editor.setCursorBufferPosition([saveRow, saveCol + indentedRow.length - line.length + (line.match(/.*\r.*/) ? 1 : 0)]);
        };
      })(this));
    };

    EpitechNorm.prototype.getIndentedRow = function(lineNb) {
      var braces, c, ind, last, line, match, multiLines, parens, shift, skip, spacesBeforeArgs, temp, text, tmpLine, _i, _len, _ref;
      ind = 0;
      last = 0;
      text = this.editor.getText();
      spacesBeforeArgs = 0;
      skip = false;
      multiLines = false;
      braces = [];
      parens = [];
      _ref = text.split("\n");
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        line = _ref[_i];
        temp = line.replace(/^\s+/, "").replace(/\r/, "");
        shift = 0;
        if (line.match(/.*\}.*/)) {
          if (braces.length > 0) {
            shift = braces.pop();
          }
          if (shift === 0 && braces.length > 0 && braces[braces.length - 1] > 0) {
            shift = braces.pop();
          }
          ind -= 1 + last + shift;
          last = 0;
        }
        tmpLine = this.replaceTabsBySpaces(line);
        if (lineNb === 0 && parens.length > 0) {
          return "\t".repeat(Math.floor(parens[parens.length - 1] / 8)) + " ".repeat(parens[parens.length - 1] % 8) + temp;
        }
        skip = parens.length > 0;
        c = 1;
        while (match = (new RegExp("(?:(.*?\\\(){" + c + "})")).exec(tmpLine)) {
          parens.push(match[0].length);
          c += 1;
        }
        c = 1;
        while (match = (new RegExp("(?:(.*?\\\)){" + c + "})")).exec(tmpLine)) {
          parens.pop();
          c += 1;
        }
        if (lineNb === 0) {
          ind += shift - (line.match(/.*[\{\}].*/) ? last : 0);
          if (ind < 1) {
            return temp;
          }
          if (line.match(/\s+[\{\}]\s*\r?/)) {
            ind += 0.5;
          } else if (last) {
            ind -= 0.5;
          }
          return "\t".repeat(Math.floor((ind * 2 - 1) / 4)) + "  ".repeat((ind * 2 - 1) % 4) + temp;
        }
        if (line.match(/.*\{.*/)) {
          ind += +1 - last;
          braces.push(0);
          last = 0;
        } else if (parens.length === 0 && line.match(/.*(if|while|for|do)\s*\(.*\).*;\s*\r?$/) || line.match(/.*else.*;\s*\r?$/)) {
          console.log("Condition closed");
        } else if (line.match(/.*else.*/) || line.match(/.*(if|while|for|do)\s*\(.*/)) {
          ind += 1;
          if (last) {
            if (!braces.length) {
              braces.push(0);
            }
            braces[braces.length - 1] = braces[braces.length - 1] + 1;
            console.log(braces);
            ind -= 0.5;
            console.log("(if|while|for|do) ind= " + ind);
          }
          last = 1;
        } else {
          if (parens.length === 0 && !skip) {
            if (last) {
              ind -= braces.length > 0 && braces[braces.length - 1] ? braces.pop() : 1;
            }
            last = 0;
          }
          if (!last) {
            if (line.match(/\=.*[^;\r][\s]*$/) || line.match(/\=.*[^;][\s]*\r$/)) {
              ind += 1;
              multiLines = true;
            } else {
              if (multiLines) {
                ind -= 1;
              }
              multiLines = false;
            }
          }
        }
        lineNb = lineNb - 1;
      }
      return "";
    };

    EpitechNorm.prototype.insertTab = function(e) {
      if (!this.activated) {
        if (e) {
          e.abortKeyBinding();
        }
        return;
      }
      return this.editor.insertText('\t');
    };

    EpitechNorm.prototype.insertNewLine = function(e) {
      if (!this.activated) {
        if (e) {
          e.abortKeyBinding();
        }
        return;
      }
      return this.editor.transact((function(_this) {
        return function() {
          var col, line, row, _ref;
          _ref = _this.editor.getCursorBufferPosition().toArray(), row = _ref[0], col = _ref[1];
          line = _this.editor.getText().split("\n")[row];
          if (line.charAt(col - 1) === '{' && line.charAt(col) === '}') {
            _this.editor.insertText("\n\n");
            _this.indent(e);
            _this.editor.setCursorBufferPosition([row, 0]);
            _this.indent(e);
            _this.editor.setCursorBufferPosition([row + 2, 0]);
            _this.indent(e);
            _this.editor.setCursorBufferPosition([row + 1, 0]);
            _this.editor.moveToEndOfLine();
          } else {
            _this.editor.insertText("\n");
          }
          return _this.indent(e);
        };
      })(this));
    };

    return EpitechNorm;

  })();

}).call(this);

//# sourceMappingURL=data:application/json;base64,

//# sourceURL=/home/loic/.atom/packages/atom-epitech-norm/lib/epitech-norm.coffee
