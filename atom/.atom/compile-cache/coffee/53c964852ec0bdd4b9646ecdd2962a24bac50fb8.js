(function() {
  var Dialog, EpitechHeaders, moment;

  moment = require('moment');

  Dialog = require('./dialog');

  EpitechHeaders = (function() {
    function EpitechHeaders() {}

    EpitechHeaders.prototype.config = {
      owner: {
        type: 'string',
        "default": 'John Doe'
      },
      login: {
        type: 'string',
        "default": 'login_x'
      },
      domain: {
        type: 'string',
        "default": 'epitech.eu'
      }
    };

    EpitechHeaders.prototype.activate = function() {
      atom.workspace.observeTextEditors((function(_this) {
        return function(editor) {
          return editor.getBuffer().onWillSave(function() {
            return _this.updateHeader(editor);
          });
        };
      })(this));
      return atom.commands.add('atom-workspace', {
        'epitech-headers:insert': (function(_this) {
          return function() {
            return _this.insert();
          };
        })(this)
      });
    };

    EpitechHeaders.prototype.insert = function() {
      var editor;
      editor = atom.workspace.getActiveTextEditor();
      if (editor == null) {
        return;
      }
      if (editor.getPath()) {
        return this.insertHeader(editor);
      } else {
        return atom.confirm({
          message: "Please save your file first.",
          detailedMessage: "",
          buttons: {
            Ok: function() {}
          }
        });
      }
    };

    EpitechHeaders.prototype.update = function() {
      var editor;
      editor = atom.workspace.getActiveTextEditor();
      if (!editor) {
        return;
      }
      return this.updateHeader(editor);
    };

    EpitechHeaders.prototype.getHeaderText = function(editor) {
      var currentDate, currentDay, dialog, directory, fileName, path, text, tmp;
      editor = atom.workspace.getActiveTextEditor();
      path = editor.getPath();
      tmp = path.split("/");
      fileName = tmp[tmp.length - 1];
      directory = path.split(fileName)[0];
      currentDay = moment().format("DD");
      currentDate = moment().format("ddd MMM " + currentDay.replace('0', ' ').replace('1 ', '10').replace('2 ', '20').replace('3 ', '30') + " HH:mm:ss YYYY");
      text = "%file for %projectName in %path\n\nMade by %owner\nLogin   <%login@%domain>\n\nStarted on  %cdate %creator\nLast update %udate %editor";
      text = text.replace('%owner', atom.config.get('epitech-headers.owner'));
      text = text.replace('%creator', atom.config.get('epitech-headers.owner'));
      text = text.replace('%editor', atom.config.get('epitech-headers.owner'));
      text = text.replace('%login', atom.config.get('epitech-headers.login'));
      text = text.replace('%domain', atom.config.get('epitech-headers.domain'));
      text = text.replace('%file', fileName);
      text = text.replace('%path', directory);
      text = text.replace('%cdate', currentDate);
      text = text.replace('%udate', currentDate);
      dialog = new Dialog({
        editor: editor,
        text: text,
        onConfirm: this.onConfirm
      });
      return dialog.attach();
    };

    EpitechHeaders.prototype.onConfirm = function(editor, text, projectName, closeCallback) {
      var range;
      closeCallback();
      text = text.replace('%projectName', projectName);
      editor.setCursorBufferPosition([0, 0], {
        autoscroll: false
      });
      if (text.match(/.*\.[ch] for.*/)) {
        text = "/*\n" + text;
        text = text.replace(/\n/g, "\n** ");
        text = text + "\n*/";
        editor.insertText(text, {
          select: true
        });
      } else if (text.match(/.*Makefile for.*/)) {
        text = "##\n" + text;
        text = text.replace(/\n/g, "\n## ");
        text = text + "\n##";
        editor.insertText(text, {
          select: true
        });
      } else {
        text = "\n" + text + "\n\n";
        editor.insertText(text, {
          select: true
        });
        editor.toggleLineCommentsInSelection();
      }
      range = editor.getSelectedBufferRange();
      editor.setCursorBufferPosition(range.end);
      return editor.insertText("\n");
    };

    EpitechHeaders.prototype.hasHeader = function(obj) {
      if (obj.buffer != null) {
        return this.hasHeader(obj.buffer);
      }
      return this.hasHeaderInText(obj.getTextInRange([[0, 0], [10, 0]]));
    };

    EpitechHeaders.prototype.hasHeaderInText = function(text) {
      return text.match(/.* for .* in.*\r?\n.*\r?\n.*Made by .*\r?\n.*Login   <.*@.*>.*\r?\n.*\r?\n.*Started on  .*\r?\n.*Last update .*\r?\n/m);
    };

    EpitechHeaders.prototype.insertHeader = function(editor) {
      if (!this.hasHeader(editor)) {
        return this.restoreCursor(editor, (function(_this) {
          return function() {
            return editor.transact(function() {
              return _this.getHeaderText(editor);
            });
          };
        })(this));
      }
    };

    EpitechHeaders.prototype.updateHeader = function(editor) {
      if (!editor.isModified()) {
        return;
      }
      if (this.hasHeader(editor)) {
        return editor.scanInBufferRange(/Last update .*/, [[0, 0], [10, 0]], function(_arg) {
          var currentDate, currentDay, matchText, replace;
          matchText = _arg.matchText, replace = _arg.replace;
          currentDay = moment().format("DD");
          currentDate = moment().format("ddd MMM " + currentDay.replace('0', ' ').replace('1 ', '10').replace('2 ', '20').replace('3 ', '30') + " HH:mm:ss YYYY");
          return replace("Last update " + currentDate + " " + atom.config.get('epitech-headers.owner'));
        });
      }
    };

    EpitechHeaders.prototype.restoreCursor = function(editor, callback) {
      var marker;
      marker = editor.markBufferPosition(editor.getCursorBufferPosition(), {
        persistent: false
      });
      callback();
      editor.setCursorBufferPosition(marker.getHeadBufferPosition());
      return marker.destroy();
    };

    return EpitechHeaders;

  })();

  module.exports = new EpitechHeaders();

}).call(this);

//# sourceMappingURL=data:application/json;base64,

//# sourceURL=/home/loic/.atom/packages/epitech-headers/lib/epitech-headers.coffee
